format_version: 10
pipelines:
    deploy-vroom:
        environment_variables:
            GITHUB_TOKEN: "{{SECRET:[devinfra-github][token]}}"
            GCP_PROJECT: internal-sentry
            GKE_CLUSTER: zdpwkxst
            GKE_REGION: us-central1
            GKE_CLUSTER_ZONE: b
            GKE_BASTION_ZONE: b
            ENVIRONMENT: production
        group: vroom
        lock_behavior: unlockWhenFinished
        materials:
            vroom_repo:
                git: git@github.com:getsentry/vroom.git
                shallow_clone: true
                destination: vroom
                branch: main
        stages:
            - checks:
                  fetch_materials: true
                  jobs:
                      check_ci_status:
                          timeout: 600
                          elastic_profile_id: vroom
                          tasks:
                              - script: |
                                    /devinfra/scripts/checks/githubactions/checkruns.py \
                                        getsentry/vroom \
                                        ${GO_REVISION_VROOM_REPO} \
                                        test-vroom
                      check_build_status:
                          timeout: 600
                          elastic_profile_id: vroom
                          tasks:
                              - script: |
                                 /devinfra/scripts/checks/googlecloud/checkcloudbuild.py \
                                    ${GO_REVISION_VROOM_REPO} \
                                    ${GCP_PROJECT} \
                                    "us.gcr.io/${GCP_PROJECT}/vroom"
            - deploy-canary:
                  approval:
                      type: success
                      allow_only_on_success: true
                  jobs:
                      deploy-to-k8s:
                          timeout: 600
                          elastic_profile_id: vroom
                          tasks:
                              # Prevents `ERROR: (gcloud.compute.ssh) INVALID_ARGUMENT: Login profile size exceeds 32 KiB. Delete profile values to make additional space.`
                              # From: https://github.com/kyma-project/test-infra/issues/93
                              - script: |
                                   for i in $(gcloud compute os-login ssh-keys list | grep -v FINGERPRINT); do echo $i; gcloud compute os-login ssh-keys remove --key $i; done
                              - script: |
                                   /devinfra/scripts/k8s/k8stunnel

                                   /devinfra/scripts/k8s/k8s-deploy.py \
                                      --context="gke_${GCP_PROJECT}_${GKE_REGION}-${GKE_CLUSTER_ZONE}_${GKE_CLUSTER}" \
                                      --label-selector="service=vroom,component=default,environment=${ENVIRONMENT},env=canary" \
                                      --image="us.gcr.io/${GCP_PROJECT}/vroom:${GO_REVISION_VROOM_REPO}" \
                                      --container-name="vroom"
                              - script: |
                                   /devinfra/scripts/canary/canarychecks.py \
                                     --wait-minutes=5
            - deploy-primary:
                  approval:
                      type: success
                      allow_only_on_success: true
                  jobs:
                      deploy-to-k8s:
                          timeout: 600
                          elastic_profile_id: vroom
                          tasks:
                              - script: |
                                   /devinfra/scripts/k8s/k8stunnel

                                   /devinfra/scripts/k8s/k8s-deploy.py \
                                      --context="gke_${GCP_PROJECT}_${GKE_REGION}-${GKE_CLUSTER_ZONE}_${GKE_CLUSTER}" \
                                      --label-selector="service=vroom,component=default,environment=${ENVIRONMENT}" \
                                      --image="us.gcr.io/${GCP_PROJECT}/vroom:${GO_REVISION_VROOM_REPO}" \
                                      --container-name="vroom"
